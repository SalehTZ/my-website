[{"categories":["Flutter","UI","Performance"],"content":"A practical breakdown of shrinkWrap and slivers in Flutter with code examples, use-cases, and when to use each approach.","date":"2025-04-23","objectID":"/fa/shrinkwrap_vs_slivers/","tags":["Flutter","ShrinkWrap","Slivers","UI Optimization"],"title":"ShrinkWrap vs Slivers in Flutter","uri":"/fa/shrinkwrap_vs_slivers/"},{"categories":["Flutter","UI","Performance"],"content":"🧠 خلاصه: ShrinkWrap در برابر Slivers در فلاتر در فلاتر، مدیریت صحیح ویجت‌های قابل اسکرول برای دستیابی به عملکرد بهتر و تجربه کاربری روان‌تر اهمیت بالایی دارد. این پست به بررسی دو روش رایج می‌پردازد: استفاده از shrinkWrap و به‌کارگیری Slivers. ","date":"2025-04-23","objectID":"/fa/shrinkwrap_vs_slivers/:1:0","tags":["Flutter","ShrinkWrap","Slivers","UI Optimization"],"title":"ShrinkWrap vs Slivers in Flutter","uri":"/fa/shrinkwrap_vs_slivers/"},{"categories":["Flutter","UI","Performance"],"content":"🔹 ShrinkWrap تعریف: ویژگی‌ای که اگر مقدار آن روی true تنظیم شود، باعث می‌شود ویجت قابل اسکرول، اندازه خود را بر اساس فرزندانش تنظیم کند و نه فضای موجود. موارد استفاده: زمانی که یک ویجت قابل اسکرول را داخل ویجت قابل اسکرول دیگری قرار می‌دهید (مثلاً ListView داخل Column). زمانی که تعداد ویجت‌های فرزند کم و مشخص است. نکات مهم: استفاده در لیست‌های بزرگ می‌تواند باعث افت عملکرد شود، زیرا باید اندازه تمام فرزندان را محاسبه کند. ممکن است منجر به خطاهای محدودیت و overflow شود اگر به درستی مدیریت نشود. ✅ مثال با shrinkWrap Column( children: [ Text('Header'), ListView.builder( shrinkWrap: true, physics: NeverScrollableScrollPhysics(), itemCount: 5, itemBuilder: (context, index) =\u003e ListTile( title: Text('آیتم \\$index'), ), ), ], ) ","date":"2025-04-23","objectID":"/fa/shrinkwrap_vs_slivers/:1:1","tags":["Flutter","ShrinkWrap","Slivers","UI Optimization"],"title":"ShrinkWrap vs Slivers in Flutter","uri":"/fa/shrinkwrap_vs_slivers/"},{"categories":["Flutter","UI","Performance"],"content":"🔹 Slivers تعریف: ویجت‌هایی تخصصی که ناحیه‌های قابل اسکرول با رفتارهای سفارشی تولید می‌کنند و کنترل دقیق‌تری روی اسکرول فراهم می‌سازند. موارد استفاده: ساخت افکت‌های پیچیده اسکرول مانند نوار ابزار جمع‌شونده یا لیست‌های بی‌نهایت. بهینه‌سازی عملکرد هنگام کار با مجموعه داده‌های بزرگ. نکات مهم: نیاز به درک عمیق‌تری از مکانیزم رندر فلاتر دارد. پیاده‌سازی آن نسبت به ویجت‌های اسکرول معمولی پیچیده‌تر و طولانی‌تر است. ✅ مثال با Slivers CustomScrollView( slivers: [ SliverAppBar( expandedHeight: 200.0, floating: false, pinned: true, flexibleSpace: FlexibleSpaceBar( title: Text('دموی Sliver'), ), ), SliverList( delegate: SliverChildBuilderDelegate( (context, index) =\u003e ListTile( title: Text('آیتم \\$index'), ), childCount: 20, ), ), ], ) ","date":"2025-04-23","objectID":"/fa/shrinkwrap_vs_slivers/:1:2","tags":["Flutter","ShrinkWrap","Slivers","UI Optimization"],"title":"ShrinkWrap vs Slivers in Flutter","uri":"/fa/shrinkwrap_vs_slivers/"},{"categories":["Flutter","UI","Performance"],"content":"🆚 مقایسه ویژگی ShrinkWrap Slivers پیچیدگی پیاده‌سازی ساده‌تر پیچیده‌تر، نیازمند درک Sliverها عملکرد ناکارآمد در لیست‌های بزرگ بهینه‌شده برای مجموعه داده‌های بزرگ سفارشی‌سازی محدود بسیار قابل سفارشی‌سازی موارد استفاده ویجت‌های اسکرول کوچک و تو در تو افکت‌های اسکرول پیشرفته و لیست‌های حجیم ","date":"2025-04-23","objectID":"/fa/shrinkwrap_vs_slivers/:1:3","tags":["Flutter","ShrinkWrap","Slivers","UI Optimization"],"title":"ShrinkWrap vs Slivers in Flutter","uri":"/fa/shrinkwrap_vs_slivers/"},{"categories":["Flutter","UI","Performance"],"content":"📝 جمع‌بندی انتخاب بین shrinkWrap و Slivers به نیازهای خاص اپلیکیشن شما بستگی دارد. برای ویجت‌های اسکرول تو در تو و کوچک با تعداد مشخص فرزندان، استفاده از shrinkWrap ساده و مناسب است. اما اگر به دنبال اسکرول‌های پیچیده یا بهینه‌سازی عملکرد در داده‌های حجیم هستید، استفاده از Slivers گزینه بهتری خواهد بود. آشنایی با این ابزارها و استفاده درست از آن‌ها نقش مهمی در توسعه اپلیکیشن‌های سریع و پاسخ‌گو در فلاتر دارد. ","date":"2025-04-23","objectID":"/fa/shrinkwrap_vs_slivers/:2:0","tags":["Flutter","ShrinkWrap","Slivers","UI Optimization"],"title":"ShrinkWrap vs Slivers in Flutter","uri":"/fa/shrinkwrap_vs_slivers/"},{"categories":[],"content":"خوش اومدی به وبلاگ من 🚀 این اولین پست منه — یه قدم کوچیک که شروع مسیرم توی این وبلاگ رو نشون میده. موفق ممنونم که به وبسایت من سر زدی! 🎉 خیلی خوشحالم که قراره اینجا تجربیات، پروژه‌ها و یادگیری‌هام رو باهاتون به اشتراک بذارم. ","date":"2025-03-25","objectID":"/fa/first_post/:0:0","tags":[],"title":"اولین پست","uri":"/fa/first_post/"},{"categories":[],"content":"🌱 چرا این وبلاگ رو ساختم؟ این وبلاگ رو ساختم تا یه جایی باشه برای جمع کردن چیزهایی که یاد می‌گیرم، پروژه‌هایی که انجام میدم و تجربه‌هایی که به دست میارم. نوشتن باعث میشه بهتر فکر کنم و شاید این نوشته‌ها به درد بقیه هم بخوره. اگه دنبال یادگیری، الهام گرفتن یا حتی فقط کنجکاوی — خیلی خوش اومدی! اینجا قراره چه چیزهایی ببینی: مطالب فنی — فلاتر، اینترنت اشیا و توسعه وب مدرن آموزش‌ها و کدهای کاربردی داستان پروژه‌ها — چالش‌ها و راه‌حل‌های واقعی افکار پراکنده — چون همیشه همه چیز توی دسته‌بندی جا نمی‌گیره 😉 ","date":"2025-03-25","objectID":"/fa/first_post/:1:0","tags":[],"title":"اولین پست","uri":"/fa/first_post/"},{"categories":[],"content":"🔥 موضوعاتی که دوست دارم چیزهایی که حسابی بهم انرژی میدن: فلاتر و توسعه موبایل اینترنت اشیا (IoT) سیستم‌های خانه هوشمند کدنویسی تمیز و اصول حرفه‌ای مستندسازی، Markdown و وبلاگ‌نویسی ","date":"2025-03-25","objectID":"/fa/first_post/:2:0","tags":[],"title":"اولین پست","uri":"/fa/first_post/"},{"categories":[],"content":"✍️ هدف من “بهترین راه یادگیری، آموزش دادن به دیگرانه.” هدفم از این وبلاگ اینه که هم خودم رشد کنم و هم چیزهایی که بلدم رو با بقیه به اشتراک بذارم — شاید به درد کسی خورد. راهنما منتظر بمون! کلی محتوای خفن تو راهه. میتونی این سایت رو بوکمارک کنی یا توی گیت‌هاب و لینکدین دنبال کنی تا از پست‌های جدید باخبر بشی. ","date":"2025-03-25","objectID":"/fa/first_post/:3:0","tags":[],"title":"اولین پست","uri":"/fa/first_post/"},{"categories":[],"content":"☕ حرف آخر بازم ممنون که اینجایی. خوشحال میشم اگر نظری داری یا حتی دوست داری موضوعی رو پیشنهاد بدی که درباره‌ش بنویسم. بیاین با هم یاد بگیریم و بسازیم! 💪 تا پست بعدی، پرقدرت کدنویسی کن! — صالح طالبی زاده","date":"2025-03-25","objectID":"/fa/first_post/:4:0","tags":[],"title":"اولین پست","uri":"/fa/first_post/"},{"categories":null,"content":"درباره من","date":"2019-08-02","objectID":"/fa/about/","tags":null,"title":"درباره من","uri":"/fa/about/"},{"categories":null,"content":"🧑🏻 About Me I’m Saleh Talebizadeh, a passionate and dedicated Flutter Developer with a strong focus on Flutter development. I have a proven track record in the computer software industry and am committed to continuous learning and staying up-to-date with the latest technologies. I’m actively seeking opportunities to excel in the field of Flutter development. ","date":"2019-08-02","objectID":"/fa/about/:1:0","tags":null,"title":"درباره من","uri":"/fa/about/"},{"categories":null,"content":"📊 GitHub Stats: ","date":"2019-08-02","objectID":"/fa/about/:2:0","tags":null,"title":"درباره من","uri":"/fa/about/"},{"categories":null,"content":"🔮 Skills ","date":"2019-08-02","objectID":"/fa/about/:3:0","tags":null,"title":"درباره من","uri":"/fa/about/"},{"categories":null,"content":"🧑🏻‍🎓 Education Bachelor’s Degree: Computer Science Shahid Bahonar University, Kerman, Iran Sep 2016 - Sep 2020 ","date":"2019-08-02","objectID":"/fa/about/:4:0","tags":null,"title":"درباره من","uri":"/fa/about/"},{"categories":null,"content":"Languages English: Fluent Persian: Native ","date":"2019-08-02","objectID":"/fa/about/:5:0","tags":null,"title":"درباره من","uri":"/fa/about/"},{"categories":null,"content":"🦜 Here are some parrots ","date":"2019-08-02","objectID":"/fa/about/:5:1","tags":null,"title":"درباره من","uri":"/fa/about/"}]